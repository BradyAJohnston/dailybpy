name: Build Blender bpy Module

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch: # Allow manual triggering

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Blender repository
        uses: actions/checkout@v4
        with:
          repository: "blender/blender"
          fetch-depth: 1 # Shallow clone
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Get current week
        id: week
        run: echo "week=$(date +'%Y-W%U')" >> $GITHUB_OUTPUT

      - name: Cache Blender libraries
        uses: actions/cache@v4
        with:
          path: lib
          key: blender-lib-linux-${{ steps.week.outputs.week }}
          restore-keys: |
            blender-lib-linux-

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: linux-bpy

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake git subversion \
            libx11-dev libxxf86vm-dev libxcursor-dev libxi-dev \
            libxrandr-dev libxinerama-dev libegl-dev \
            libwayland-dev wayland-protocols libxkbcommon-dev libdbus-1-dev linux-libc-dev

      - name: Update libraries
        run: |
          make update

      - name: Build bpy module
        run: |
          export PATH="/usr/lib/ccache:$PATH"
          make bpy

      - name: Create wheel package
        run: |
          python -m pip install wheel setuptools
          python ./build_files/utils/make_bpy_wheel.py ../build_linux_bpy/bin/

      - name: Copy wheel to workspace
        run: |
          mkdir -p ./dist
          cp ../build_linux_bpy/bin/bpy-*.whl ./dist/

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: bpy-linux-x64
          path: ./dist/*.whl
          retention-days: 30

  build-macos-arm:
    runs-on: macos-latest
    steps:
      - name: Checkout Blender repository
        uses: actions/checkout@v4
        with:
          repository: "blender/blender"
          fetch-depth: 1 # Shallow clone
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Get current week
        id: week
        run: echo "week=$(date +'%Y-W%U')" >> $GITHUB_OUTPUT

      - name: Cache Blender libraries
        uses: actions/cache@v4
        with:
          path: lib
          key: blender-lib-macos-arm64-${{ steps.week.outputs.week }}
          restore-keys: |
            blender-lib-macos-arm64-

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: macos-arm64-bpy

      # cmake already installed on GHA runners
      # - name: Install dependencies
      #   run: |
      #     brew install cmake

      - name: Update libraries
        run: |
          make update

      - name: Build bpy module
        run: |
          export PATH="$(brew --prefix)/opt/ccache/libexec:$PATH"
          make bpy

      - name: Create wheel package
        run: |
          python -m pip install wheel setuptools
          python ./build_files/utils/make_bpy_wheel.py ../build_darwin_bpy/bin/

      - name: Copy wheel to workspace
        run: |
          mkdir -p ./dist
          cp ../build_darwin_bpy/bin/bpy-*.whl ./dist/

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: bpy-macos-arm64
          path: ./dist/*.whl
          retention-days: 30

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Blender repository
        uses: actions/checkout@v4
        with:
          repository: "blender/blender"
          fetch-depth: 1 # Shallow clone
          submodules: "recursive"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Get current week
        shell: bash
        run: echo "week=$(date +'%Y-W%U')" >> $GITHUB_OUTPUT
        id: week

      - name: Cache Blender libraries
        uses: actions/cache@v4
        with:
          path: lib
          key: blender-lib-windows-x64-${{ steps.week.outputs.week }}
          restore-keys: |
            blender-lib-windows-x64-

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.8

      - name: Set up Visual Studio
        uses: microsoft/setup-msbuild@v2

      - name: Update libraries
        shell: powershell
        run: |
          "y" | cmd /c make.bat update

      - name: Build bpy module
        shell: cmd
        env:
          CC: sccache cl
          CXX: sccache cl
        run: |
          make.bat bpy

      - name: Find build directory
        shell: powershell
        run: |
          $buildDir = Get-ChildItem -Path .. -Directory -Filter "build_windows*" | Select-Object -First 1 -ExpandProperty Name
          echo "BUILD_DIR=$buildDir" >> $env:GITHUB_ENV

      - name: Debug - List build directory contents
        shell: powershell
        run: |
          Write-Host "Contents of ../$env:BUILD_DIR/bin:"
          Get-ChildItem -Path "..\$env:BUILD_DIR\bin" -Recurse -Depth 2 | Select-Object FullName

      - name: Create wheel package
        shell: powershell
        run: |
          python -m pip install wheel setuptools
          $binPath = "..\$env:BUILD_DIR\bin\Release"
          if (-not (Test-Path $binPath)) {
            $binPath = "..\$env:BUILD_DIR\bin"
          }
          Write-Host "Using bin path: $binPath"
          python .\build_files\utils\make_bpy_wheel.py $binPath

      - name: Copy wheel to workspace
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path .\dist
          $binPath = "..\$env:BUILD_DIR\bin\Release"
          if (-not (Test-Path $binPath)) {
            $binPath = "..\$env:BUILD_DIR\bin"
          }
          Copy-Item -Path "$binPath\bpy-*.whl" -Destination .\dist\

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: bpy-windows-x64
          path: ./dist/*.whl
          retention-days: 30

  create-release:
    needs: [build-linux, build-macos-arm, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: daily-${{ steps.date.outputs.date }}
          name: ${{ steps.date.outputs.date }}
          body: |
            Automated daily builds of `bpy`

            ## Installation
            ```bash
            pip install bpy --extra-index-url https://bradyajohnston.github.io/dailybpy/
            ```
          draft: false
          prerelease: false
          files: |
            ./artifacts/**/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
